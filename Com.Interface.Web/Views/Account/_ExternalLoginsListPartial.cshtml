@model Com.Interface.Web.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            foreach (AuthenticationDescription p in loginProviders)
            {
                switch (p.Caption)
                {
                    case "Google":
                        <div class="actions">
                            <button type="submit" class="btn submit azm-social azm-btn azm-google-plus" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">
                                <i class="fa fa-google-plus"></i>Sign in with Google+
                            </button>
                        </div>
                        break;

                    case "Facebook":
                        <div class="actions">
                            <button type="submit" class="submit azm-social azm-btn azm-facebook " id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">
                                <i class="fa fa-facebook"></i>Log in with Facebook
                            </button>
                        </div>
                        break;

                    default:
                        <div class="actions">
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>

                        </div>
                        break;
                }
            }
        }
    }
}
